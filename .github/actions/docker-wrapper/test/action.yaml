name: "Docker Image Test (dgoss)"
description: "Runs dgoss tests on a locally built Docker image using a single test file variable. No multi-arch/QEMU logic."

runs:
  using: "composite"
  steps:
    - name: Pre Step (Docker Image Test)
      shell: bash
      run: |
        echo "[PRE] Placeholder for pre-test actions."

    - name: Validate Inputs and Environment (Docker Test)
      uses: ./cicd-shared-lib/.github/actions/utils/validate-inputs
      with:
        actionInputs: |
          GHA_CICD_DGOSS_TEST_FILE: "${{ env.GHA_CICD_DGOSS_TEST_FILE }}"
        requiredInputs: |
          - GHA_CICD_DGOSS_TEST_FILE
        filesPathInputs: |
          - GHA_CICD_DGOSS_TEST_FILE
        typeValidations: |
          string:
            - GHA_CICD_DGOSS_TEST_FILE

    - name: Install dgoss/goss
      shell: bash
      run: |
        mkdir -p "$HOME/bin"
        curl -fsSL "$GHA_CICD_LOCAL_GOSS_URL" -o "$HOME/bin/goss"
        curl -fsSL "$GHA_CICD_LOCAL_DGOSS_URL" -o "$HOME/bin/dgoss"
        chmod +x "$HOME/bin/dgoss" "$HOME/bin/goss"
        echo "$HOME/bin" >> $GITHUB_PATH

    - name: Run dgoss Tests
      shell: bash
      run: |
        if [ ! -f "$GHA_CICD_DGOSS_TEST_FILE" ]; then
          echo "::error::? dgoss test file not found: $GHA_CICD_DGOSS_TEST_FILE"
          exit 1
        fi

        export GOSS_FILES_STRATEGY=cp
        export GOSS_FILE="$GHA_CICD_DGOSS_TEST_FILE"
        cat $GHA_CICD_DGOSS_TEST_FILE
        dgoss run --entrypoint sleep ${{ env.GHA_CICD_LOCAL_DOCKER_IMAGE_NAME }} infinity | tee dgoss-report.txt

    - name: Upload dgoss Test Report
      uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: dgoss-report
        path: dgoss-report.txt
        overwrite: true

    - name: Post Step (Docker Image Test)
      if: ${{ !cancelled() }}
      shell: bash
      run: |
        echo "[POST] Placeholder for post-test actions."