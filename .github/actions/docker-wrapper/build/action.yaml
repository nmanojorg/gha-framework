name: "Docker Build (Local Registry & Save Archive)"
description: "Optimized: Builds Docker image for local registry, supports build args from file/env, saves as image.tar, and prints debug info."

runs:
  using: "composite"
  steps:
    - name: Prepare Docker build arguments
      id: buildargs
      shell: bash
      run: |
        echo "::group::Preparing Docker build arguments"
        ARGS=()
        # Add build args from file if provided
        if [[ -n "$GHA_CICD_DOCKER_BUILD_ARGS_FILE" && -f "$GHA_CICD_DOCKER_BUILD_ARGS_FILE" ]]; then
          while IFS= read -r line; do
            [[ -n "$line" ]] && ARGS+=("$line")
          done < "$GHA_CICD_DOCKER_BUILD_ARGS_FILE"
        fi
        # Add build args from environment variable if provided
        if [[ -n "$GHA_CICD_DOCKER_BUILD_ARGS" ]]; then
          for arg in $GHA_CICD_DOCKER_BUILD_ARGS; do
            ARGS+=("$arg")
          done
        fi
        # Output as multi-line string (YAML list)
        {
          echo "BUILD_ARGS<<EOF"
          for a in "${ARGS[@]}"; do echo "$a"; done
          echo "EOF"
        } >> "$GITHUB_OUTPUT"
        echo "::endgroup::"

    - name: Print Docker build environment (debug)
      shell: bash
      run: |
        echo "::group::Docker Build Debug Info"
        env | grep GHA_CICD_ || true
        echo "Prepared build args:"
        printf "%s\n" "${{ steps.buildargs.outputs.BUILD_ARGS }}"
        echo "::endgroup::"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image with Buildx
      uses: docker/build-push-action@v5
      with:
        context: ${{ env.GHA_CICD_DOCKER_CONTEXT }}
        file: ${{ env.GHA_CICD_DOCKERFILE_PATH }}
        tags: ${{ env.GHA_CICD_DOCKER_IMAGE }}
        build-args: ${{ steps.buildargs.outputs.BUILD_ARGS }}
        push: false
        load: true

    - name: Check Docker image existence (debug)
      shell: bash
      run: |
        echo "::group::Checking Docker image existence"
        if docker image inspect "$GHA_CICD_DOCKER_IMAGE" > /dev/null 2>&1; then
          echo "? Image $GHA_CICD_DOCKER_IMAGE exists locally."
        else
          echo "? Image $GHA_CICD_DOCKER_IMAGE NOT found locally."
        fi
        docker images | grep "$(echo "$GHA_CICD_DOCKER_IMAGE" | cut -d':' -f1)" || echo "No images found with name."
        echo "::endgroup::"

    - name: Save Docker image as tar archive
      shell: bash
      run: |
        echo "::group::Saving Docker image as image.tar"
        docker save -o image.tar "$GHA_CICD_DOCKER_IMAGE"
        echo "Docker image saved to image.tar"
        echo "::endgroup::"

    - name: Print tar archive debug info
      shell: bash
      run: |
        echo "::group::Docker image archive debug"
        ls -lh image.tar
        echo "sha256sum:"
        if command -v sha256sum &>/dev/null; then
          sha256sum image.tar
        elif command -v shasum &>/dev/null; then
          shasum -a 256 image.tar
        fi
        echo "Tar file contents (first 20 lines):"
        tar -tvf image.tar | head -20 || echo "Not a tar file or cannot list contents"
        echo "::endgroup::"

    - name: Upload Docker image archive
      uses: actions/upload-artifact@v4
      with:
        name: docker-image-archive
        path: image.tar