name: "Docker Build (Multi-Arch, Multi-Image)"
description: "Builds Docker images for multiple platforms and image URLs using env vars only."

runs:
  using: "composite"
  steps:
    - name: Prepare Docker build arguments for each platform and image
      shell: bash
      run: |
        PLATFORMS="${GHA_CICD_DOCKER_PLATFORMS:-linux/amd64}"
        IMAGE_URLS="${GHA_CICD_DOCKER_IMAGE_URLS}"
        DOCKERFILE_PATH="${GHA_CICD_DOCKERFILE_PATH:-Dockerfile}"
        DOCKER_CONTEXT="${GHA_CICD_DOCKER_CONTEXT:-.}"

        for platform in $(echo "$PLATFORMS" | tr ',' ' '); do
          platform_key="${platform//\//_}"
          BUILD_ARGS_VAR="GHA_CICD_DOCKER_BUILD_ARGS_${platform_key}"
          BUILD_ARGS_FILE_VAR="GHA_CICD_DOCKER_BUILD_ARGS_FILE_${platform_key}"

          BUILD_ARGS="${!BUILD_ARGS_VAR}"
          BUILD_ARGS_FILE="${!BUILD_ARGS_FILE_VAR}"

          # Prepare build arguments file if exists
          ARGS_FILE_OPTION=""
          if [ -n "$BUILD_ARGS_FILE" ] && [ -f "$BUILD_ARGS_FILE" ]; then
            ARGS_FILE_OPTION="--build-arg-file $BUILD_ARGS_FILE"
          fi

          for image_url in $IMAGE_URLS; do
            IMAGE_TAG="${image_url}-${platform_key}"
            TAR_FILE="${IMAGE_TAG//[:\/]/_}.tar"

            echo "::group::Building $IMAGE_TAG for $platform"
            docker buildx build \
              --platform "$platform" \
              --file "$DOCKERFILE_PATH" \
              --context "$DOCKER_CONTEXT" \
              $( [ -n "$BUILD_ARGS" ] && echo "--build-arg $BUILD_ARGS" ) \
              $ARGS_FILE_OPTION \
              -t "$IMAGE_TAG" \
              --output type=tar,dest="$TAR_FILE" \
              --push=false \
              --load

            echo "Built $IMAGE_TAG, saved as $TAR_FILE"
            echo "::endgroup::"
          done
        done