name: "Docker Build (Multi-Arch, Multi-Image)"
description: "Builds Docker images for multiple platforms and image URLs using env vars only."

runs:
  using: "composite"
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build images for each platform and image
      shell: bash
      run: |
        set -e

        echo "::group::Docker Build Settings"
        echo "[INFO] IMAGE_URLS: $GHA_CICD_DOCKER_IMAGE_URLS"
        echo "[INFO] DOCKERFILE_PATH: $GHA_CICD_DOCKERFILE_PATH"
        echo "[INFO] DOCKER_CONTEXT: $GHA_CICD_DOCKER_CONTEXT"
        echo "[INFO] PLATFORMS: $GHA_CICD_DOCKER_PLATFORMS"
        echo "::endgroup::"

        IMAGE_URLS="${GHA_CICD_DOCKER_IMAGE_URLS}"
        DOCKERFILE_PATH="${GHA_CICD_DOCKERFILE_PATH}"
        DOCKER_CONTEXT="${GHA_CICD_DOCKER_CONTEXT}"
        PLATFORMS="${GHA_CICD_DOCKER_PLATFORMS}"

        build_image() {
          local image_url="$1"
          local platform="$2"
          local platform_key="$3"

          export PLATFORM_KEY="$platform_key"
          echo "::group::Build Arguments"
          BUILD_ARG_OPTIONS=$(python3 "$GITHUB_ACTION_PATH/prepare_build_args.py")
          echo "[INFO] BUILD_ARG_OPTIONS: $BUILD_ARG_OPTIONS"
          echo "::endgroup::"

          local image_tag="$image_url"
          if [ -n "$platform_key" ]; then
            image_tag="${image_url}-${platform_key}"
          fi
          local tar_file="${image_tag//[:\/]/_}.tar"

          if [ -n "$platform" ]; then
            echo "::group::Building $image_tag for $platform"
          else
            echo "::group::Building $image_tag (default platform)"
          fi

          docker buildx build \
            ${platform:+--platform "$platform"} \
            --file "$DOCKERFILE_PATH" \
            $BUILD_ARG_OPTIONS \
            -t "$image_tag" \
            --output type=tar,dest="$tar_file" \
            --push=false \
            --load \
            "$DOCKER_CONTEXT"

          echo "Built $image_tag, saved as $tar_file"
          echo "::endgroup::"
        }

        if [ -z "$PLATFORMS" ]; then
          for image_url in $IMAGE_URLS; do
            build_image "$image_url" "" ""
          done
        else
          # Split platforms by comma, trim spaces, and ignore empty entries
          IFS=',' read -ra platform_list <<< "$PLATFORMS"
          for raw_platform in "${platform_list[@]}"; do
            platform="$(echo "$raw_platform" | xargs)"
            [ -z "$platform" ] && continue
            platform_key="${platform//\//_}"
            for image_url in $IMAGE_URLS; do
              build_image "$image_url" "$platform" "$platform_key"
            done
          done
        fi